description: Run a Lighthouse audit and save results

parameters:
  apiToken:
    description: The automated-lighthouse-check.com account API token found in the dashboard.
    type: string
    default: $LIGHTHOUSE_CHECK_API_TOKEN
  author:
    description: For Slack notifications - A user handle, typically from GitHub.
    type: string
    default: $CIRCLE_USERNAME
  awsAccessKeyId:
    description: The AWS accessKeyId for an S3 bucket for optional HTML report upload.
    type: string
    default: $LIGHTHOUSE_CHECK_AWS_ACCESS_KEY_ID
  awsBucket:
    description: The AWS Bucket for an S3 bucket for optional HTML report upload.
    type: string
    default: $LIGHTHOUSE_CHECK_AWS_BUCKET
  awsRegion:
    description: The AWS region for an S3 bucket for optional HTML report upload.
    type: string
    default: $LIGHTHOUSE_CHECK_AWS_REGION
  awsSecretAccessKey:
    description: The AWS secretAccessKey for an S3 bucket for optional HTML report upload.
    type: string
    default: $LIGHTHOUSE_CHECK_AWS_SECRET_ACCESS_KEY
  branch:
    description: For Slack notifications - A version control branch, typically from GitHub.
    type: string
    default: $CIRCLE_BRANCH
  configFile:
    description: A configuration file path in JSON format which holds all options defined here. This file should be relative to the file being interpretted. In this case it will most likely be the root of the repo ("./")
    type: string
    default: ""
  emulatedFormFactor:
    description: Lighthouse setting only used for local audits. See lighthouse-check NPM module for details.
    type: string
    default: ""
  locale:
    description: A locale for Lighthouse reports. Example - ja
    type: string
    default: ""
  pr:
    description: For Slack notifications - A version control pull request URL, typically from GitHub.
    type: string
    default: $CIRCLE_PULL_REQUEST
  sha:
    description: For Slack notifications - A version control sha, typically from GitHub.
    type: string
    default: $CIRCLE_SHA1
  slackWebhookUrl:
    description: A Slack Incoming Webhook URL to send notifications to.
    type: string
    default: $LIGHTHOUSE_CHECK_SLACK_WEBHOOK_URL
  tag:
    description: 'An optional tag or name (example: "build #2" or "v0.0.2").'
    type: string
    default: ""
  throttling:
    description: Lighthouse setting only used for local audits. See lighthouse-check NPM module comments for details.
    type: string
    default: ""
  throttlingMethod:
    description: Lighthouse setting only used for local audits. See lighthouse-check NPM module comments for details.
    type: string
    default: ""
  timeout:
    description: 'Minutes to timeout for remote runs. If "wait" option is "true" (it is by default), we wait for results. If this timeout is met before results are received an error is thrown.'
    type: string
    default: ""
  urls:
    description: A comma-separated list of URLs (or page API tokens if running remotely).
    type: string
    default: ""
  wait:
    description: 'If "true", for remote runs, waits for all audit results to be returned, otherwise URLs are only enqueued.'
    type: string
    default: ""

steps:
  - run:
      name: Run a Lighthouse audit and save results
      command: |
        mkdir /tmp/artifacts
        lighthouse-check --verbose --isOrb \
          --apiToken << parameters.apiToken >> \
          --author << parameters.author >> \
          --awsAccessKeyId << parameters.awsAccessKeyId >> \
          --awsBucket << parameters.awsBucket >> \
          --awsRegion << parameters.awsRegion >> \
          --awsSecretAccessKey << parameters.awsSecretAccessKey >> \
          --branch << parameters.branch >> \
          --configFile << parameters.configFile >> \
          --emulatedFormFactor << parameters.emulatedFormFactor >> \
          --locale << parameters.locale >> \
          --outputDirectory /tmp/artifacts \
          --pr << parameters.pr >> \
          --sha << parameters.sha >> \
          --slackWebhookUrl << parameters.slackWebhookUrl >> \
          --tag << parameters.tag >> \
          --throttling << parameters.throttling >> \
          --throttlingMethod << parameters.throttlingMethod >> \
          --timeout << parameters.timeout >> \
          --urls << parameters.urls >> \
          --wait << parameters.wait >> \
  - store_artifacts:
      name: Store Artifacts
      path: /tmp/artifacts
